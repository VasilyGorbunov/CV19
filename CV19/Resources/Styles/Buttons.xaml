<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa5="http://schemas.fontawesome.com/icons/">
    <Style x:Key="BaseBtn" TargetType="Button">
        <Setter Property="Background" Value="White" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource BaseBtn}"></Style>

    <Style x:Key="PrimaryBtn" TargetType="Button" BasedOn="{StaticResource BaseBtn}">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="DangerBtn" TargetType="Button" BasedOn="{StaticResource BaseBtn}">
        <Setter Property="Background" Value="DarkRed" />
        <Setter Property="Foreground" Value="WhiteSmoke" />
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               SnapsToDevicePixels="true" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CustomButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                CornerRadius="5"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter"
                              Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <!--<Setter Property="Background" TargetName="border" Value="Teal" />-->
                <Setter Property="BorderBrush" TargetName="border" Value="LightGray" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="DarkGreen" />
                <Setter Property="BorderBrush" TargetName="border" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="Gray" />
                <Setter Property="BorderBrush" TargetName="border" Value="Black" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="LightGray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template" Value="{StaticResource CustomButtonTemplate}" />
    </Style>

    <DropShadowEffect x:Key="ShadowDepth1" ShadowDepth="1" />

    <ControlTemplate x:Key="CheckButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                CornerRadius="5"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
            <DockPanel Margin="{TemplateBinding Padding}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <fa5:SvgAwesome Name="Icon"
                                Height="14"
                                Icon="Solid_Check"
                                Foreground="Green"
                                Margin="0 0 5 0"
                                Effect="{StaticResource ShadowDepth1}" />
                <ContentPresenter x:Name="contentPresenter"
                                  Focusable="False"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="Teal" />
                <Setter Property="BorderBrush" TargetName="border" Value="LightGray" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White" />
                <Setter TargetName="Icon" Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="DarkGreen" />
                <Setter Property="BorderBrush" TargetName="border" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="Gray" />
                <Setter Property="BorderBrush" TargetName="border" Value="Black" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="LightGray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="CheckButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template" Value="{StaticResource CheckButtonTemplate}" />
    </Style>

    <!--#region Remove Button -->
    <ControlTemplate x:Key="RemoveButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border"
                CornerRadius="5"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
            <DockPanel Margin="{TemplateBinding Padding}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <fa5:SvgAwesome x:Name="Icon"
                                Height="14"
                                Icon="Solid_Trash"
                                Foreground="White"
                                Margin="0 0 5 0"
                                Effect="{StaticResource ShadowDepth1}" />
                <ContentPresenter x:Name="contentPresenter"
                                  Focusable="False"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="DarkRed" />
                <Setter Property="BorderBrush" TargetName="border" Value="LightGray" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Yellow" />
                <Setter TargetName="Icon" Property="Foreground" Value="Yellow" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="Red" />
                <Setter Property="BorderBrush" TargetName="border" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="Gray" />
                <Setter Property="BorderBrush" TargetName="border" Value="Black" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="LightGray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="RemoveButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Crimson" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template" Value="{StaticResource RemoveButtonTemplate}" />
    </Style>
    <!--#endregion-->

</ResourceDictionary>